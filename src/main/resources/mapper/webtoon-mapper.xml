<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="webtoon">
	<select id="selectWebtoonList" resultType="webtoon">
		select w.webtoon_no, w.webtoon_title, w.webtoon_thumbnail, w.webtoon_intro, w.webtoon_rating, w.webtoon_isinseries, w.webtoon_isdeleted
		<if test="tab.equals('all')">
			, s.serial_day
		</if>
		<if test="!tab.equals('all')">
			, (select member_nickname from member_tbl where member_no=(select member_no from creator_tbl where webtoon_no=w.webtoon_no and creator_type=1)) writer_str,
			(select member_nickname from member_tbl where member_no=(select member_no from creator_tbl where webtoon_no=w.webtoon_no and creator_type=2)) painter_str,
			(select nvl(avg(rating),0) from rating_tbl where webtoon_no=w.webtoon_no) avgRating
		</if>
		from webtoon_tbl w
		<choose>
			<!-- 전체 요일 -->
			<when test="tab.equals('all')">
				join serial_days_tbl s on w.webtoon_no=s.webtoon_no
				where webtoon_isinseries='1'
			</when>
			<!-- 장르 -->
			<when test="tab.equals('genre')">
				where webtoon_isinseries='1' and webtoon_no in (select webtoon_no from webtoon_genres_tbl where genre_no=#{genre})
			</when>
			<!-- 신작 -->
			<when test="tab.equals('new')">
				where webtoon_isinseries='1' and webtoon_no in (select distinct(webtoon_no) from episode_tbl e where (select min(epi_open_date) from episode_tbl where webtoon_no=e.webtoon_no) >= to_char(sysdate-30, 'yyyy-mm-dd'))
			</when>
			<!-- 완결 -->
			<when test="tab.equals('finish')">
				where webtoon_isinseries!='1'
			</when>
			<!-- 요일 -->
			<otherwise>
				where webtoon_isinseries='1' and webtoon_no in (select webtoon_no from serial_days_tbl where serial_day=#{tab})
			</otherwise>
		</choose>
		order by
		<if test="tab.equals('all')">
			serial_day,
		</if>
		<!-- 인기순 -->
		<if test="sort.equals('popularity')">
			((select webtoon_weeklyviews from webtoon_tbl where webtoon_no=w.webtoon_no)*0.5
			+(select avg(read_count) from episode_tbl where webtoon_no=w.webtoon_no)*0.3
			+(select nvl(avg(rating),0) from rating_tbl where webtoon_no=w.webtoon_no)*0.2) desc
		</if>
		<!-- 업데이트순 -->
		<if test="sort.equals('update')">
			(select max(epi_open_date) from episode_tbl where webtoon_no=w.webtoon_no) desc
		</if>
		<!-- 조회순 -->
		<if test="sort.equals('view')">
			(select avg(read_count) from episode_tbl where webtoon_no=w.webtoon_no) desc
		</if>
		<!-- 별점순 -->
		<if test="sort.equals('rating')">
			(select nvl(avg(rating),0) from rating_tbl where webtoon_no=w.webtoon_no) desc, webtoon_title
		</if>
	</select>
	
	<select id="selectGenreList" resultType="genre">
		select * from genres_tbl
	</select>
	<select id="selectTagList" resultType="String">
		SELECT DISTINCT HASHTAG FROM HASHTAGS_TBL where hashtag like #{hashtag}||'%'
	</select>
	<select id="selectWriterList" resultType="member">
		SELECT * FROM member_tbl where member_id like #{memberId}||'%'
	</select>
	<insert id="insertWebtoon">
		insert into webtoon_tbl values(WEBTOON_SEQ.nextval,#{webtoonTitle},#{webtoonThumbnail},#{webtoonIntro},#{webtoonRating},'1','0',0)
		<selectKey resultType="int" order="AFTER" keyProperty="webtoonNo">
			select max(webtoon_no) from webtoon_tbl
		</selectKey>
	</insert>
	<insert id="insertCreator">
		insert into creator_tbl values(#{memberNo},#{webtoonNo},#{creatorType})
	</insert>
	<insert id="insertDay">
		insert into serial_days_tbl values(#{webtoonNo},#{serialDay})
	</insert>
	<insert id="insertGenre">
		insert into webtoon_genres_tbl values(#{webtoonNo},#{genreNo})
	</insert>
	<insert id="insertTag">
		insert into hashtags_tbl values(#{webtoonNo},#{hashtag})
	</insert>
	<update id="deleteWebtoon">
		update webtoon_tbl set WEBTOON_ISDELETED = '1' where webtoon_no=#{webtoonNo}
	</update>
	
	<select id="selectMyWorksCount" resultType="int">
		select count(*) from (select distinct webtoon_no from creator_tbl where member_no=#{memberNo})c join webtoon_tbl w on c.webtoon_no=w.webtoon_no where w.webtoon_isdeleted='0'
	</select>
	
	
	<select id="selectSerialDay" resultType="String">
		SELECT SERIAL_DAY FROM SERIAL_DAYS_TBL WHERE WEBTOON_NO = #{webtoonNo}
	</select>

	<resultMap type="webtoon" id="getMyWork">
	    <result column="webtoon_no" property="webtoonNo" />
	    <result column="webtoon_title" property="webtoonTitle" />
	    <result column="webtoon_thumbnail" property="webtoonThumbnail" />
	    <result column="webtoon_rating" property="webtoonRating" />
	    <result column="webtoon_isinseries" property="webtoonIsinseries" />
	    <result column="avg_rating" property="avgRating" />
	    <collection property="day" ofType="String" select="selectSerialDay" javaType="java.util.List" column="webtoon_no"/>
	</resultMap>
	
	<select id="selectMyWorksList" resultMap="getMyWork">
		select * from
			(select rownum rnum,w.* from
		    	(SELECT 
		       		 w.webtoon_no, w.webtoon_title, w.webtoon_thumbnail, w.webtoon_rating, w.webtoon_isinseries,
		        	COALESCE((
			            SELECT AVG(r.rating)
			            FROM RATING_TBL r
			            WHERE r.webtoon_no = w.webtoon_no
		        	), -1) AS avg_rating
		    	FROM WEBTOON_TBL w
		    	WHERE w.webtoon_no IN (
			        	SELECT DISTINCT webtoon_no
			        	FROM creator_tbl
			        	WHERE member_no = #{memberNo}
		    		) and w.webtoon_isdeleted='0'
		    		order by 
			    		<choose>
							<when test="type==1">
								1 desc
							</when>
							<when test="type==2">
								2
							</when>
						</choose>
		    	)w
			 )
		where rnum between #{start} and #{end}
	</select>
	
	<resultMap type="webtoon" id="getMyWorkInfo">
	    <result column="webtoon_no" property="webtoonNo" />
	    <result column="webtoon_title" property="webtoonTitle" />
	    <result column="webtoon_intro" property="webtoonIntro" />
	    <result column="webtoon_thumbnail" property="webtoonThumbnail" />
	    <result column="webtoon_rating" property="webtoonRating" />
	    <result column="webtoon_isinseries" property="webtoonIsinseries" />
	    <association property="creator1" javaType="Creator" select="selectWriter" column="webtoon_no"/>
	    <association property="creator2" javaType="Creator" select="selectPainter" column="webtoon_no"/>
	    <collection property="day" ofType="String" select="selectSerialDay" javaType="java.util.List" column="webtoon_no"/>
	    <collection property="genre" ofType="String" select="selectGenre" javaType="java.util.List" column="webtoon_no"/>
	    <collection property="hashtag" ofType="String" select="selectHashtag" javaType="java.util.List" column="webtoon_no"/>
	</resultMap>
	<select id="selectMyWork" resultMap="getMyWorkInfo">
		select webtoon_no,webtoon_title,webtoon_intro,webtoon_thumbnail,webtoon_rating,webtoon_isinseries from webtoon_tbl where webtoon_no=#{webtoonNo}
	</select>
	<select id="selectGenre" resultType="int">
		select genre_no from webtoon_genres_tbl where webtoon_no=#{webtoonNo}
	</select>
	<select id="selectHashtag" resultType="String">
		select hashtag from hashtags_tbl where webtoon_no=#{webtoonNo}
	</select>
	<select id="selectWriter" resultType="creator">
		select c.member_no, m.member_id, m.member_nickname from creator_tbl c join member_tbl m on c.member_no=m.member_no where webtoon_no=#{webtoonNo} and c.creator_type=1
	</select>
	<select id="selectPainter" resultType="creator">
		select c.member_no, m.member_id, m.member_nickname from creator_tbl c join member_tbl m on c.member_no=m.member_no where webtoon_no=#{webtoonNo} and c.creator_type=2
	</select>
	<update id="updateMyWork">
		update webtoon_tbl set webtoon_title=#{webtoonTitle}, webtoon_thumbnail=#{webtoonThumbnail}, webtoon_intro=#{webtoonIntro}, webtoon_rating=#{webtoonRating}, webtoon_isinseries=#{webtoonIsinseries} where webtoon_no=#{webtoonNo}
	</update>
	<update id="updateCreator">
		update creator_tbl set member_no=#{memberNo} where webtoon_no=#{webtoonNo} and creator_type=#{creatorType}
	</update>
	<select id="selectDaysCount" resultType="int">
		select count(*) from SERIAL_DAYS_TBL where webtoon_no=#{webtoonNo}
	</select>
	<delete id="deleteDays">
		delete from SERIAL_DAYS_TBL where webtoon_no=#{webtoonNo}
	</delete>
	<select id="selectGenresCount" resultType="int">
		select count(*) from webtoon_genres_tbl where webtoon_no=#{webtoonNo}
	</select>
	<delete id="deleteGenres">
		delete from webtoon_genres_tbl where webtoon_no=#{webtoonNo}
	</delete>
	<delete id="deleteTags">
		delete from hashtags_tbl where webtoon_no=#{webtoonNo} and hashtag = #{hashtag}
	</delete>
	<select id="selectEpiNo" resultType="int">
		select count(*) from episode_tbl where webtoon_no = #{webtoonNo}
	</select>
	<select id="selectWebtoonTitle" resultType="String">
		select webtoon_title from webtoon_tbl where webtoon_no=#{webtoonNo}
	</select>
	<insert id="insertEpi">
		INSERT INTO episode_tbl VALUES (episode_seq.nextval, #{webtoonNo}, #{epiTitle}, #{epiThumbnail}, #{epiMessage}, sysdate, 
		 <choose>
            <when test="epiOpenDate.equals('')">
                sysdate
            </when>
            <otherwise>
                TO_TIMESTAMP(#{epiOpenDate}, 'YYYY-MM-DD"T"HH24:MI')
            </otherwise>
        </choose>
		, 0, '1')
		<selectKey order="AFTER" resultType="int" keyProperty="epiNo">
			select max(epi_no) from episode_tbl
		</selectKey>
	</insert>
	<insert id="insertEpiFile">
		insert into EPISODE_FILE_TBL values(EPISODE_FILE_SEQ.nextval,#{epiNo},#{fileName},#{filePath})
	</insert>
	
	<select id="selectEpisodeDetail" resultMap="getEpisodeDetail">
		select * from 
		    (select rownum real_epi_no, e.* from 
		        (select 
		            (select min(epi_no) from episode_tbl where webtoon_no=#{webtoonNo}) first_epi_no,
		            (select max(epi_no) from episode_tbl where webtoon_no=#{webtoonNo}) newest_epi_no,
		            (select member_nickname from member_tbl where member_no=(select member_no from creator_tbl where webtoon_no=e.webtoon_no and creator_type=1)) writer_str,
			(select member_nickname from member_tbl where member_no=(select member_no from creator_tbl where webtoon_no=e.webtoon_no and creator_type=2)) painter_str,
		        epi_no, webtoon_no, epi_title, epi_thumbnail, epi_message, epi_open_date, epi_isfree from episode_tbl e where webtoon_no=#{webtoonNo} order by epi_no)e
		    )
		where real_epi_no=#{reqNo}
	</select>
	<select id="selectEpisodeFileList" resultType="episodeFile">
		select file_name, file_path from episode_file_tbl where epi_no=#{epiNo} 
	</select>
	<resultMap type="episode" id="getEpisodeDetail">
		<result column="epi_no" property="epiNo"/>
		<result column="webtoon_no" property="webtoonNo"/>
		<result column="epi_title" property="epiTitle"/>
		<result column="epi_thumbnail" property="epiThumbnail"/>
		<result column="epi_message" property="epiMessage"/>
		<result column="epi_open_date" property="epiOpenDate"/>
		<result column="epi_isfree" property="epiIsfree"/>
		<result column="first_epi_no" property="firstEpiNo"/>
		<result column="newest_epi_no" property="newestEpiNo"/>
		<result column="writer_str" property="writerStr"/>
		<result column="painter_str" property="painterStr"/>
		<collection property="episodeFile" select="selectEpisodeFileList" column="epi_no" javaType="java.util.List" ofType="episodeFile"/>
	</resultMap>
	<select id="selectCommentCount" resultType="int">
		select count(*) from comment_tbl where epi_no=#{epiNo} and comment_ref is null
	</select>
	<select id="selectCommentList" resultMap="getEpisodeComments">
		select * from 
		    (select rownum rnum, c.* from 
		        (select comment_no, epi_no, comment_writer, comment_content, to_char(comment_date, 'yyyy-mm-dd hh24:mi:ss') comment_date,
		        (select count(*) from comment_like_tbl where comment_no=c.comment_no) like_count
		        from comment_tbl c where epi_no=#{epiNo} and comment_ref is null order by comment_date desc)c
		    ) 
		where rnum between #{start} and #{end}
	</select>
	<select id="getRecommentList" resultType="comment" parameterType="java.util.Map">
		select comment_no, epi_no, comment_writer, comment_content, to_char(comment_date, 'yyyy-mm-dd hh24:mi:ss') comment_date, comment_ref,
		(select count(*) from comment_like_tbl where comment_no=c.comment_no) like_count
		from comment_tbl c where epi_no=#{epiNo} and comment_ref=#{commentNo} order by comment_date
	</select>
	<resultMap type="comment" id="getEpisodeComments">
		<result column="comment_no" property="commentNo"/>
		<result column="epi_no" property="epiNo"/>
		<result column="comment_writer" property="commentWriter"/>
		<result column="comment_content" property="commentContent"/>
		<result column="comment_date" property="commentDate"/>
		<result column="like_count" property="likeCount"/>
		<collection property="recommentList" select="getRecommentList" column="{epiNo=epi_no, commentNo=comment_no}" javaType="java.util.List" ofType="comment"/>
	</resultMap>
	<select id="selectRecentView" resultType="int">
		select count(*) from recent_view_tbl where webtoon_no=#{webtoonNo} and epi_no=#{epiNo} and member_no=#{memberNo}
	</select>
	<insert id="insertRecentView">
		insert into recent_view_tbl values(#{memberNo}, #{webtoonNo}, #{epiNo}, #{viewPercent}, sysdate)
	</insert>
	<update id="updateRecentView">
		update recent_view_tbl set view_percent=#{viewPercent}, view_date=sysdate
	</update>
</mapper>
